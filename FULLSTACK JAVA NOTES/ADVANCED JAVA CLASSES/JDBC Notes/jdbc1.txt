JDBC 
=====
As if now it is known as trade mark.

But earlier it is known as Java Database Connectivity.

RAM is a temperory storage device or medium.

During the program execution our data will store in RAM.

Once the program execution is completed we will loss the data.

To overcome this limitation we are making our application writing the data in a file or database software.

File and database software act like a permanent storage device or medium.

Persistence 
===========
The process of storing and managing the data for a long period of time is called persistence.


Important terminologies
=======================
1) Persistence store
--------------------
It is a place where we can store and manage the data for a long period of time.
ex:
	Files
	Database Software's

2) Persistence data 
------------------
Data of a persistence store is called persistence data.
ex:
	Files - Records 
	Database Software's - tables

3) Persistence operations 
---------------------------
Insert, Update, Delete , Create, Select and etc are called persistence operations.
In realtime this operation is also known as CURD operation, CRUD operation or SCUD operation.
ex:
	C - create 	S - select 
	U - update 	C - create 
	R - read	U - update 
	D - delete 	D - delete 


4) Persistence logic
--------------------
A logic which is capable to perform persistence operations is called persistence logic.
ex:
	JDBC Code 
	Hibernate Code 
	EJB code 
	and etc. 

5) Persistence technology 
-------------------------
A technology which is used to develop persistence logics is called persistence technology.
ex:
	JDBC 
	Hibernate 
	
Q) What is JDBC?

JDBC is a persistence technology which is used to develop persistence logics having the capability to perform persistence operations on persistence data of a persistence store.

Note:
-----

				IOStream 
	JavaApp	------------------------------------------	File
			Serialization/Deserialization 


				JDBC Code
	JavaApp ------------------------------------------     Database S/W  


Limitations with File as a persistence store 
============================================

> We can store limited amount of data.

> There is no security.

> Fetching the data with multiple conditions is not possible. 

> It does not allow us to apply constraints.

> It does not show an application with relationships.

> Updation and deletion of data can't be done directly.

> Merging and comparision of data can't be done easily.

Advantages of Database as a persistence store 
=============================================

> We can store unlimited amount of data.

> There is a security.

> It supports common query language.

> Fetching the data with multiple conditions is possible.

> It allows us to apply constraints.

> It shows an application with relationships.

> Updation and deletion of data can be done directly.

> Merging and comparision of data can be done easily.



Every JDBC application is a two-tier application.

Java with JDBC code acts like a frontend/tier1/layer1 and database software acts like backend/tier2/layer2.

The one which is visible to the enduser is called frontend.

The one which is not visible to enduser but performs operations based on the instructions given by frontend is called backend.


JDBC Driver 
===========
It acts like a bridge between java application and database software.
It is used to convert java instructions to database instructions and vice versa.

Diagram: jdbc1.1


ODBC Driver 
==========
VBScript, Perl, D2K and etc uses ODBC Driver to locate and interact with database software.

Diagram: jdbc1.2

ODBC Drivers developed in C language by taking the support of pointers. Java does not support pointers. To overcome this limitation Sun Micro System introduced JDBC drivers exlusively.


Q) How many drivers are there in JDBC?

We have four types of JDBC Drivers.

1) Type1 JDBC Driver / JDBC-ODBC Bridge Driver 

2) Type2 JDBC Driver / Native API Driver 

3) Type3 JDBC Driver / Net Protocol Driver 

4) Type4 JDBC Driver / Native Protocol Driver 































		





















