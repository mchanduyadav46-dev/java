Servlet to Database Communication 
=================================
Diagram: servlet5.1


Deployment Directory Structure 
-------------------------------
DBApp
|
|---Java Resources
	|
	|------src
		|
		|---com.ihub.www
			|
			|---TestSrv.java
|---WebContent
	|
	|---form.html 
	|---WEB-INF
		|
		|-----web.xml 
		|-----lib 
			|
			|---ojdbc14.jar 
Note:
-----
In above application we need to add "servlet-api.jar" and "ojdbc14.jar" file in project build path.


student table 
=============
drop table student;
create table student(sno number(3),sname varchar2(10), sadd varchar2(12));


form.html 
--------

<form action="test" method="GET">

	<table align="center">
		<tr>
			<td>No:</td>
			<td><input type="text" name="t1"/></td>
		</tr>
		<tr>
			<td>Name:</td>
			<td><input type="text" name="t2"/></td>
		</tr>
		<tr>
			<td>Address:</td>
			<td><input type="text" name="t3"/></td>
		</tr>
		<tr>
			<td><input type="reset" value="reset"/></td>
			<td><input type="submit" value="submit"/></td>
		</tr>
	</table>

</form>

web.xml 
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
  <servlet>
  	<servlet-name>TestSrv</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv</servlet-class>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>TestSrv</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
</web-app>

TestSrv.java
-------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw = res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String sno = req.getParameter("t1");
		int no = Integer.parseInt(sno);
		String name = req.getParameter("t2");
		String add = req.getParameter("t3");
		
		//insert the data into database 
		Connection con = null;
		PreparedStatement ps = null;
		int result = 0;
		String qry = null;
		try
		{
			Class.forName("oracle.jdbc.driver.OracleDriver");
			con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
			qry = "insert into student values(?,?,?)";
			ps = con.prepareStatement(qry);
			
			//set the values 
			ps.setInt(1, no);
			ps.setString(2, name);
			ps.setString(3, add);
			
			//execute 
			result = ps.executeUpdate();
			
			if(result==0)
				pw.println("<center><h1>No Record Inserted</h1></center>");
			else
				pw.println("<center><h1>Record Inserted</h1></center>");
			
			ps.close();
			con.close();
		}
		catch(Exception e)
		{
			pw.print(e.getMessage());
		}
	}
}

Request url 
---------
	http://localhost:2525/DBApp/


Form Validation 
===============
The process of checking format and pattern of form data is called form validation and such logic is called form validation logic.

To perform client side form validation we will use javascript.

Deployment Directory Structure 
------------------------------
ValidationApp 
|
|---Java Resources
	|
	|------src
		|
		|---com.ihub.www
			|
			|---FormSrv.java
|---WebContent
	|
	|---form.html 
	|---validation.js 
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html 
---------
<!DOCTYPE html>
<html>
	<head>
			<title>MyPage!</title>
			<script language="javascript" src="validation.js"></script>
	</head>
	<body>
			<form name="myform" action="test" method="GET" onsubmit="return validate()">
				<table align="center">
					<tr>
						<td>Name:</td>
						<td><input type="text" name="t1"/></td>
					</tr>
					<tr>
						<td>Age:</td>
						<td><input type="text" name="t2"/></td>
					</tr>
					<tr>
						<td><input type="reset" value="reset"/></td>
						<td><input type="submit" value="submit"/></td>
					</tr>
				</table>
			</form>
	</body>
</html>

validation.js 
-------------
function validate()
{
	
	//reading form data 
	var name = document.myform.t1.value;
	var age = document.myform.t2.value;
	
	if(name=="")
	{
		alert("Name is mandatory");
		document.myform.t1.focus();
		return false;
	}
	if(age=="")
	{
		alert("Age is mandatory");
		document.myform.t2.focus();
		return false;
	}
	else
	{
		if(isNaN(age))
		{
			alert("Age must be Numeric");
			document.myform.t2.value="";
			document.myform.t2.focus();
			return false;
		}
	}
	
	return true;
}

web.xml 
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
  <servlet>
  	<servlet-name>FormSrv</servlet-name>
  	<servlet-class>com.ihub.www.FormSrv</servlet-class>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>FormSrv</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
</web-app>

FormSrv.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class FormSrv extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw = res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String name = req.getParameter("t1");
		
		String sage = req.getParameter("t2");
		int age = Integer.parseInt(sage);
		
		if(age<18)
			pw.println("<center><h1>"+name+" u r not eligible to vote</h1></center>");
		else
			pw.println("<center><h1>"+name+" u r eligible to vote</h1></center>");
		
		pw.close();
	}
}

Request url
---------
	http://localhost:2525/ValidationApp/



















































