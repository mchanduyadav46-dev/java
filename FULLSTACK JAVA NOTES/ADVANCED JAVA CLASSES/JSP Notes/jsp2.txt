JSP Tags/Elements
==================
We have three tags in JSP.

1) Scripting Tags 
-----------------
	i) Scriptlet tag
		ex:
			<%  code here  %> 

	ii) Expression tag 
		ex:
			<%= code here %>

	iii) Declaration tag 
		ex:
			<%! code here %>

2) Directive Tags 
-----------------
	i) Page directive tag 
		ex:
			<%@page  attribute=value %>
	
	ii) Include directive tag 
		ex:
			<%@include  attribute=value %>

3) Action Tags
---------------
	ex:
		<jsp:include>
		<jsp:forward>
		<jsp:useBean>
		<jsp:setProperty>
		<jsp:getProperty>
		and etc.

Comment in JSP 
--------------
	<%-- comment --%>


Scriptlet tag
=============
It is used to display java code.

syntax:
-------
	<%  code here  %> 

Deployment Directory Structure 
-----------------------------
JspApp2 
|
|---Java Resources
|
|---WebContent
	|
	|---form.html
	|---process.jsp 
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html 
---------
<form action="process.jsp">
	
	Name : <input type="text" name="t1"/>
 	<input type="submit" value="submit"/>
 		
</form>

web.xml 
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

process.jsp 
-----------
<center>
	<h1>
		<%
			String name = request.getParameter("t1");
			out.println("Welcome :"+name);
		%>
	</h1>
</center>

Request url 
----------
	http://localhost:2525/JspApp2/


Expression tag 
===============
A code which is written in expression will return to the output stream of a response. It means we don't need to use out.println() to print the data.

syntax:
-------
	<%= code here %>
Note:
-----
	Expression tag does not allow semicolon.

Deployment Directory Structure 
----------------------------
JspApp3
|
|---Java Resources
|
|---WebContent
	|
	|---index.html 
	|---process.jsp 
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

index.html 
---------
<center>
	<h1>
		<a href="process.jsp"> Get Message </a>
	</h1>
</center>

web.xml 
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>index.html</welcome-file>
  </welcome-file-list>
  
</web-app>

process.jsp
----------

<center>
	<h1>
		<%
			java.util.Calendar c = java.util.Calendar.getInstance();
			int h = c.get(java.util.Calendar.HOUR_OF_DAY);
			if(h<=12)
			{
		%>
				<%= "Good Morning" %>
				
		<% 
			}
			else if(h<=16)
			{
		%>
			<%= "Good Afternoon" %>
		<% 
			}
			else if(h<=20)
			{
		%>
				<%= "Good Evening" %>
		<% 
			}
			else
			{
		%>
				<%= "Good Night" %>
				
		<% 
			}
		%>
	</h1>
</center>

Request url
----------
	http://localhost:2525/JspApp3/






Declaration tag 
================
It is used to declare fields and methods.

syntax:
-------
	<%! code here %>

Deployment Directory Structure 
------------------------------
JspApp4
|
|---Java Resources
|
|---WebContent
	|
	|---index.jsp 
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

index.jsp
---------
<%!
	int i = 10;

	int cube(int n)
	{
		return n*n*n;
	}
%>

<%= "The value is ="+i %>
<br>
<%= "Cube of a given number is ="+cube(5) %>


web.xml 
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
 
 <welcome-file-list>
 	<welcome-file>index.jsp</welcome-file>
 </welcome-file-list>
 
</web-app>


Request url
-----------
	http://localhost:2525/JspApp4/




Exception Handing in JSP 
========================
Runtime errors are called exceptions.

Exceptions may raise any time in our application so handling exceptions is always safer side for the programmer.

There are two ways to handle the exceptions in JSP.

1) By using errorPage and isErrorPage attribute of page directive tag.

2) By using <error-page> element in web.xml file.

1) By using errorPage and isErrorPage attribute of page directive tag
---------------------------------------------------------------------
Deployment Directory Structure 
------------------------------
JspApp5
|
|---Java Resources
|
|---WebContent
	|
	|---form.html 
	|---process.jsp 
	|---error.jsp 
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
----------
<form action="process.jsp">
	
	No1: <input type="text" name="t1"/> <br>
	No2: <input type="text" name="t2"/> <br>
	<input type="submit" value="divide"/>
	
</form>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

process.jsp
-----------

<%@page errorPage="error.jsp" %>
<%
	String sno1 = request.getParameter("t1");
	String sno2 = request.getParameter("t2");
	int a = Integer.parseInt(sno1);
	int b = Integer.parseInt(sno2);
	int c = a/b;
%>
<center>
	<h2>
		<%= "Division of two numbers is ="+c %>
	</h2>
</center>


error.jsp
----------
<%@page isErrorPage="true" %>

<center>
<b><i>
	Sorry! Exception Occurred!!!!
</i></b>
<br>
<%= exception  %>
</center>

request url
----------
	http://localhost:2525/JspApp5/

2) By using <error-page> element in web.xml file
-----------------------------------------------
This approach is recommanded to use because we don't need to defined errorPage attribute in each jsp page. Defining single entry of <error-page> element in web.xml file will handle all types of exceptions.


Deployment Directory Structure 
------------------------------
JspApp5
|
|---Java Resources
|
|---WebContent
	|
	|---form.html 
	|---process.jsp 
	|---error.jsp 
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
----------
<form action="process.jsp">
	
	No1: <input type="text" name="t1"/> <br>
	No2: <input type="text" name="t2"/> <br>
	<input type="submit" value="divide"/>
	
</form>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <error-page>
  	<exception-type>java.lang.Exception</exception-type>
  	<location>/error.jsp</location>
  </error-page>
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

process.jsp
-----------
<%
	String sno1 = request.getParameter("t1");
	String sno2 = request.getParameter("t2");
	int a = Integer.parseInt(sno1);
	int b = Integer.parseInt(sno2);
	int c = a/b;
%>
<center>
	<h2>
		<%= "Division of two numbers is ="+c %>
	</h2>
</center>


error.jsp
----------
<%@page isErrorPage="true" %>

<center>
<b><i>
	Sorry! Exception Occurred Once Again!!!!
</i></b>
<br>
<%= exception  %>
</center>

request url
----------
	http://localhost:2525/JspApp5/








































